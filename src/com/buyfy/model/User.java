// model package 
package com.buyfy.model;

//Import Files Used In this Program
import java.io.*;
import java.util.*;
import javax.persistence.CascadeType;
import javax.persistence.Column; //
import javax.persistence.Entity; //entity class would have a corresponding table in DB
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;     //to mark a column as primary key in table
import javax.persistence.JoinColumn;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;  //table properties
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/*
 * User Entity
 * This will use to store user details 
 * like user order details , cart details which
 * saved in the database.
 */
@Entity
@Table(name="Users")
public class User implements Serializable
{
	// serial version uid
	private static final long serialVersionUID = -816709861818895759L;

	/* **** User Attributes ***** */
	/* User Primary Key (User_ID)
	 * User Id will be Generated by Sequence Strategy  USER_SQE_GEN
	 * */
	@Id 
	@Column(name="User_ID") 
	@GeneratedValue (strategy= GenerationType.SEQUENCE, generator="USER_SEQ_GEN") 
	@SequenceGenerator(name = "USER_SEQ_GEN", allocationSize=1 , sequenceName = "USER_SEQ_GEN") 									
	private long id;

	/* Address will be Set Address for storing
	 * User address
	 */
	//UNIDIRECTIONAL
	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.EAGER)
	private Set<Address> address;
	
	/* Order will be Set order for storing
	 * User orders
	 */
	//BIDIRECTIONAL
	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.EAGER)
	@JoinColumn(name="orders")
	private Set<Order> orders = new HashSet<>();
	
	//variable for user profile pic 
	//UNIDIRECTIONAL
	@OneToOne(cascade = CascadeType.ALL)
	@JoinColumn(name = "profile_pic")
	private Image profilePic;
	
	//variable for user cart
	//UNIDIRECTIONAL
	@OneToOne(cascade = CascadeType.ALL, fetch = FetchType.EAGER)
	@JoinColumn(name="cart")
	private Cart cart;

	//variable for user first name
	@Column(name="First_Name")
	private String firstName;
	
	//variable for user last name
	@Column(name="Last_Name")
	private String lastName;
	
	//variable for user gender
	@Column(name="Gender")
	private String gender;
		
	//variable for user phone no
	@Column(name="Phone",nullable = false)
	private String phone;
	
	//variable for user email address
	@Column(name="Email", nullable = false, unique = true)
	private String email;

	//variable for user account password
	@Column(name="Password")
	private String password;
	
	//variable for user date of birth
	@Column(name = "DOB")
	@Temporal(TemporalType.DATE)
	private Date dob;
	
	//variable for user account created type
	@Column(name = "Account_Created_Date")
	@Temporal(TemporalType.TIMESTAMP)
	private Date accountCreatedDate;
	
	//variable for user account type
	@Column(name="Account_Type")
	private String accountType;

	// No Argument User Constructor
	public User() {}

	// Parameterized User Constructor
	public User(String email, String password){
		this.email = email;
		this.password = password;
	}

	// Parameterized User Constructor
	public User(String firstName, String lastName, String gender, Set<Address> address, Image profilePic,
			String phone, String email, String password, Date dob, Date accountCreatedDate, Set<Order> orders,
			String accountType, Cart cart) {
		super();
		this.firstName = firstName;
		this.lastName = lastName;
		this.gender = gender;
		this.address = address;
		this.profilePic = profilePic;
		this.phone = phone;
		this.email = email;
		this.password = password;
		this.dob = dob;
		this.accountCreatedDate = accountCreatedDate;
		this.orders = orders;
		this.accountType = accountType;
		this.cart = cart;
	}

	/*
	 * User Getters and Setters 
	 */
	// getter for id
	public long getId() {
		return id;
	}

	// setter for id
	public void setId(long id) {
		this.id = id;
	}

	// getter for user first name
	public String getFirstName() {
		return firstName;
	}

	// setter for user first name
	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}

	// getter for user last name
	public String getLastName() {
		return lastName;
	}

	// setter for user last name
	public void setLastName(String lastName) {
		this.lastName = lastName;
	}

	// getter for use gender
	public String getGender() {
		return gender;
	}

	// setter for user gender
	public void setGender(String gender) {
		this.gender = gender;
	}

	// getter for Set<Address>
	public Set<Address> getAddress() {
		return address;
	}

	// setter for Set<Address>
	public void setAddress(Set<Address> address) {
		this.address = address;
	}

	// getter for user profile pic
	public Image getProfilePic() {
		return profilePic;
	}

	// setter for user profile pic
	public void setProfilePic(Image profilePic) {
		this.profilePic = profilePic;
	}

	// getter for user phone no
	public String getPhone() {
		return phone;
	}

	// setter for user phone no
	public void setPhone(String phone) {
		this.phone = phone;
	}

	// getter for user mail
	public String getEmail() {
		return email;
	}

	// setter for user mail
	public void setEmail(String email) {
		this.email = email;
	}

	// getter for account password
	public String getPassword() {
		return password;
	}

	// setter for account password
	public void setPassword(String password) {
		this.password = password;
	}

	// getter for account created date
	public Date getAccountCreatedDate() {
		return accountCreatedDate;
	}

	// setter for account created date
	public void setAccountCreatedDate(Date accountCreatedDate) {
		this.accountCreatedDate = accountCreatedDate;
	}

	// getter for Set<Order>
	public Set<Order> getOrders() {
		return orders;
	}

	// setter for Set<Order>
	public void setOrders(Set<Order> orders) {
		this.orders = orders;
	}

	// getter for date of accountType
	public String getAccountType() {
		return accountType;
	}

	// setter for date of accountType
	public void setAccountType(String accountType) {
		this.accountType = accountType;
	}

	// getter for date of Serialversionuid
	public static long getSerialversionuid() {
		return serialVersionUID;
	}

	// getter for date of birth
	public Date getDob() {
		return dob;
	}

	// setter for date of birth
	public void setDob(Date dob) {
		this.dob = dob;
	}

	// getter for cart
	public Cart getCart() {
		return cart;
	}

	// setter for cart
	public void setCart(Cart cart) {
		this.cart = cart;
	}

	/*
	 * Overriding toString for User
	 */
	@Override
	public String toString() {
		return "User [id=" + id + ", firstName=" + firstName + ", lastName=" + lastName + ", gender=" + gender
				+ ", address=" + address + ", profilePic=" + profilePic + ", phone=" + phone + ", email=" + email
				+ ", password=" + password + ", dob=" + dob + ", accountCreatedDate=" + accountCreatedDate + ", orders="
				+ orders + ", accountType=" + accountType +/* ", cart=" + cart +*/ "]";
	}


}
